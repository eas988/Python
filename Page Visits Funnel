import codecademylib
import pandas as pd

visits = pd.read_csv('visits.csv',
                     parse_dates=[1])
cart = pd.read_csv('cart.csv',
                   parse_dates=[1])
checkout = pd.read_csv('checkout.csv',
                       parse_dates=[1])
purchase = pd.read_csv('purchase.csv',
                       parse_dates=[1])
#Inspect dataframes using print/head
print(visits.head(), cart.head(), checkout.head(), purchase.head())
#left merge visits and cart
visits_cart = pd.merge(visits, cart, how='left')
#how long is merged dataframe?
print(len(visits_cart))
#how many timestamps are null for cart_time? These rows indicate users who did not add a t-shirt to  their cart during their visit
print(visits_cart['cart_time'].isnull().sum())
#what percentage of visitors did not end up placing a tshirt in their cart?
print((visits_cart['cart_time'].isnull().sum() / float((len(visits_cart))))*100)
cart_checkout = pd.merge(cart, checkout, how='left')
#what percentage of people placed items in their cart but did not proceed to checkout?
print((cart_checkout['checkout_time'].isnull().sum() / float((len(cart_checkout))))*100)
checkout_purchase = pd.merge(checkout, purchase, how='left')
#merge all four steps of the funnel in order using a series of left merges, then examine w/ print/head
all_data = visits_cart.merge(cart_checkout, how='left').merge(checkout_purchase, how='left')
print(all_data.head())
#what percentage of users proceeded to checkout, but did not purchase a t-shirt?\
print((all_data['cart_time'].notnull().sum() / float(all_data['visit_time'].notnull().sum()))*100)
print((all_data['checkout_time'].notnull().sum()/ float(all_data['cart_time'].notnull().sum()))*100)
print((all_data['purchase_time'].notnull().sum()/ float(all_data['checkout_time'].notnull().sum()))*100)
#Which step of the funnel is weakest? - The visit to cart phase. Establishing what shirts appeal to more people, potentially adding more styles, maybe lowering prices to encourage more purchases or incentivizing via coupons/deals/specials. It seems that once people have items in their cart there is a high rate of purchase, so getting the items in cart is critical.
all_data['time_to_purchase'] = \
    all_data.purchase_time - \
    all_data.visit_time

print(all_data.time_to_purchase)
print(all_data.time_to_purchase.mean())
#The average person takes 45 minutes from visiting the website to purchasing an item. Perhaps adding flash sales would speed up the visit to cart step?
