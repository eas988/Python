import numpy as np
import fetchmaker
from scipy.stats import binom_test
from scipy.stats import f_oneway
from statsmodels.stats.multicomp import pairwise_tukeyhsd
from scipy.stats import chi2_contingency
rottweiler_tl = fetchmaker.get_tail_length('rottweiler')
#Get the mean and standard deviation of rotteweiler tails)
print(np.mean(rottweiler_tl), np.std(rottweiler_tl))
#How many whippet rescues are there?
whippet_rescue = fetchmaker.get_is_rescue('whippet')

num_whippet_rescues = np.count_nonzero(whippet_rescue)

num_whippets = np.size(whippet_rescue)
print(num_whippets)
#Binom test
pval = binom_test(num_whippet_rescues, num_whippets, p=0.08)

print(pval)
#ANOVA test between three breed weights
whippet_weight = fetchmaker.get_weight('whippet')
terrier_weight = fetchmaker.get_weight('terrier')
pitbull_weight = fetchmaker.get_weight('pitbull')

fstat, pval2 = f_oneway(whippet_weight, terrier_weight, pitbull_weight)
print(pval2)
#Tukey range test between the breeds
v = np.concatenate([whippet_weight, terrier_weight, pitbull_weight])
labels = ['Whippet'] * len(whippet_weight) + ['Terrier'] * len(terrier_weight) + ['Pitbull'] * len(pitbull_weight)
tukey_results = pairwise_tukeyhsd(v, labels, 0.05)

print(tukey_results)
#Chi square test for color variations
poodle_colors = fetchmaker.get_color('poodle')
shihtzu_colors = fetchmaker.get_color('shihtzu')

black = [np.count_nonzero(poodle_colors == "black"), np.count_nonzero(shihtzu_colors == "black")]
brown = [np.count_nonzero(poodle_colors == "brown"), np.count_nonzero(shihtzu_colors == "brown")]
gold = [np.count_nonzero(poodle_colors == "gold"), np.count_nonzero(shihtzu_colors == "gold")]
grey = [np.count_nonzero(poodle_colors == "grey"), np.count_nonzero(shihtzu_colors == "grey")]
white = [np.count_nonzero(poodle_colors == "white"), np.count_nonzero(shihtzu_colors == "white")]
color_table = [black] + [brown] + [gold] + [grey] + [white]

chi2, pval3, dof, expected = chi2_contingency(color_table)
print(pval3)
